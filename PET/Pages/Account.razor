@page "/Account"
@inject MainModel MainVM

<style>
    .nav {   
        display :flex;
        justify-content: center;
        align-items:center;
        gap: 1%;
        width: 100%;
        height: 3vh;
        margin-top: 1%;
        background-color:bisque;
        list-style: none;
        color:darkorchid;
        border: solid black;
        cursor: pointer;
    }
       
</style>

@if (!MainVM.AccountVM.Id.Equals(Guid.Empty))
{
    <div class="nav">
        <li @onclick="() =>{ _currentUserData  = true; _bankAccountData = false;}">Personal details.</li>
        <li @onclick="() =>{_currentUserData  = false; _bankAccountData = true;}">Account details.</li>
    </div>
}

@if(_loginPanel)
{
    <LoginPanel Render="async () =>{await InvokeAsync(StateHasChanged); _loginPanel = false; _currentUserData = true;}"
    CreateUser="() =>{_loginPanel = false; _currentUserData = true;}"></LoginPanel>
}
else if (_currentUserData)
{
    <CreateUpdateAccount></CreateUpdateAccount>
} 
else if (_bankAccountData)
{
    <BankAccount></BankAccount>
}

@code {
    private bool _loginPanel =true;
    private bool _currentUserData = true;
    private bool _bankAccountData = false;

    protected async override void OnInitialized()
    {
        Console.WriteLine(MainVM.AccountVM.Id);

        if (MainVM.AccountVM.Id.Equals(Guid.Empty))
            _currentUserData = false;
        else
            _loginPanel = false;
    }                                     
}
